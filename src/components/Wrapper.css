/****************************************************************
  1) Full-Screen, Transparent Container for the Frame Image
****************************************************************/
.movie-frame-container {
  position: fixed;
  inset: 0;
  z-index: 99999;

  /* Use flex to center the image horizontally/vertically */
  display: flex;
  justify-content: center;
  align-items: center;

  /* Transparent so you can see the site behind it */
  background: transparent; 
  pointer-events: none; /* so we don't block clicks on the site except for our button */
}

/* The frame image itself: 
   - max-width/height at the viewport edges 
   - object-fit: contain-like effect 
   - optional scale up (e.g., transform: scale(1.35)) if you want it bigger 
*/
.movie-frame-img {
  /* Remove the fixed scale transform */
  /* transform: scale(1.35); */

  /* Ensure the image scales based on viewport height */
  max-width: 100%;
  max-height: 100vh; /* Restrict the height to the viewport height */
  width: auto;       /* Allow the width to adjust automatically */
  height: auto;      /* Maintain aspect ratio */
  object-fit: contain; /* Ensure the entire image fits within the container */

  pointer-events: none;
  transform-origin: center center;
}


/****************************************************************
  2) Channel Tuner Button Container
****************************************************************/
.movie-button-container {
  /* 
    We'll absolutely/fixed position it in JS with inline styles. 
  */
  pointer-events: auto; 
}

/* The button itself */
.movie-button {
  width: 10vw; 
  height: 10vw;
  min-width: 40px; 
  min-height: 40px;
  max-width: 100px; 
  max-height: 100px;

  background: none;
  border: none;
  cursor: pointer;
  pointer-events: auto;

  transition: transform 1s ease; /* for the rotate animations */
}

/* The spinning effect on hover */
.movie-button-inner {
  display: inline-block;
  transition: transform 0.4s ease;
}
.movie-button:hover .movie-button-inner {
  transform: rotateZ(25deg);
}

/* Turning On / Off animations */
.movie-button.turning-on {
  animation: turningOn 1s forwards;
}
.movie-button.turning-off {
  animation: turningOff 1s forwards;
}

@keyframes turningOn {
  0%   { transform: rotateZ(0deg);   }
  50%  { transform: rotateZ(90deg);  }
  100% { transform: rotateZ(180deg); }
}
@keyframes turningOff {
  0%   { transform: rotateZ(180deg); }
  50%  { transform: rotateZ(90deg);  }
  100% { transform: rotateZ(0deg);   }
}

/* The label under the button */
.movie-button-label {
  display: flex;
  flex-direction: column;
  align-items: center;

  color: #fff;
  font-size: 1.2rem;
  font-weight: bold;
  text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
  pointer-events: none;
  margin-top: 10px;
}
.movie-button-label-line {
  text-align: center;
}

/****************************************************************
  3) Noise Overlays 
****************************************************************/
.noise-overlay {
  position: absolute;
  top: 0; 
  left: 0;
  width: 100%; 
  height: 100%;

  background-color: rgba(0,0,0,0.95);
  background-image: url("/src/assets/noize2.gif"); /* adjust path */
  background-repeat: repeat;
  background-size: 100px 100px;

  opacity: 0;
  transform: scaleY(0);
  transform-origin: top;
  pointer-events: none;
  z-index: 100; 
}

.noise-overlay.opening {
  animation: openNoise 0.5s forwards;
}
.noise-overlay.closing {
  animation: closeNoise 0.5s forwards;
}

@keyframes openNoise {
  0% { opacity:0; transform: scaleY(0); }
  100% { opacity:0.95; transform: scaleY(1); }
}
@keyframes closeNoise {
  0% { opacity:0.95; transform: scaleY(1); }
  100% { opacity:0; transform: scaleY(0); }
}

/* Subtle always-present global noise overlay (optional) */
.global-noise-overlay {
  position: absolute;
  top: 0; 
  left: 0;
  width: 100%; 
  height: 100%;

  background-image: url("/src/assets/noize2.gif"); /* adjust path */
  background-size: 100px 100px;
  background-repeat: repeat;
  image-rendering: pixelated;

  opacity: 0.1;
  pointer-events: none;
  z-index: 150;

  animation: globalNoiseAnimation 2s steps(10) infinite;
}
@keyframes globalNoiseAnimation {
  0% { transform: translate(0,0); }
  100% { transform: translate(-50px, -50px); }
}

/* Optional Responsive Adjustments */
@media (max-width: 768px) {
  .movie-button { 
    width: 8vw; 
    height: 8vw; 
  }
}
@media (max-width: 480px) {
  .movie-button {
    width: 12vw; 
    height: 12vw;
    min-width: 40px; 
    max-width: 60px;
    min-height: 40px; 
    max-height: 60px;
  }
}


/* Apply scaling only for viewports taller than 1315px */
@media (min-height: 1301px) {
  .movie-frame-img {
    transform: scale(1.35);
  }
}

/* Optionally, adjust scaling for other viewport heights */
@media (max-height: 1300px) and (min-height: 1000px) {
  .movie-frame-img {
    transform: scale(1.2); /* Adjust scale as needed */
  }
}

@media (max-height: 799px) {
  .movie-frame-img {
    transform: scale(1); /* No scaling */
  }
}

