/* src/components/Button.css */

/* Container for Button and Label */
.movie-button-container {
    position: fixed; /* Fixed positioning relative to the viewport */
    top: 40%; /* Responsive top positioning */
    right: 2%; /* Responsive right positioning */
  
    display: flex;
    flex-direction: column; /* Stack button and label vertically */
    align-items: center; /* Center align horizontally */
  
    /* Optional: Add spacing between button and label */
    gap: 8px; /* Adjust as needed */
  
    /* Ensure container scales with viewport */
    transform: translateY(-50%);
  }
  
  /* Movie Button Styling */
  .movie-button {
    /* Remove existing top and right positioning as it's now handled by the container */
  
    /* Use relative units for sizing */
    width: 10vw; /* 10% of viewport width */
    height: 10vw; /* Maintain square aspect ratio */
  
    /* Set minimum and maximum sizes to prevent extreme scaling */
    min-width: 40px;
    min-height: 40px;
    max-width: 100px;
    max-height: 100px;
  
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
  
    /* Allow pointer events */
    pointer-events: auto;
  
    /* Transition for smooth animation */
    transition: transform 1s ease;
    z-index: 1000000; /* Above the noise overlay and scaled site */
  }
  
  .movie-button img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  
  /* Inner Wrapper for Hover Effect */
  .movie-button-inner {
    display: inline-block; /* Ensure the span wraps the image correctly */
    transition: transform 0.4s ease; /* Smooth transition for hover */
  }
  
  /* Hover Effect: Slight Rotation */
  .movie-button:hover .movie-button-inner {
    transform: rotateZ(25deg); /* Rotate 5 degrees clockwise */
  }
  
  /* Turning On Animation */
  .movie-button.turning-on {
    animation: turningOn 1s forwards;
  }
  
  /* Turning Off Animation */
  .movie-button.turning-off {
    animation: turningOff 1s forwards;
  }
  
  @keyframes turningOn {
    0% {
      transform: rotateZ(0deg);
    }
    50% {
      transform: rotateZ(90deg);
    }
    100% {
      transform: rotateZ(180deg);
    }
  }
  
  @keyframes turningOff {
    0% {
      transform: rotateZ(180deg);
    }
    50% {
      transform: rotateZ(90deg);
    }
    100% {
      transform: rotateZ(0deg);
    }
  }
  
  /* Noise Overlay Styling */
  .noise-overlay {
    background-color: rgba(0, 0, 0, 0.95); /* Black background with opacity */
    background-image: url('/src/assets/noize2.gif');
    background-repeat: repeat;
    background-size: 100px 100px; /* Adjust based on the size of noize2.gif to fully cover */
    z-index: 10; /* Below the movie button (z-1000000) and navigation bar (z-20) */
  
    /* Initial state */
    opacity: 0;
    transform: scaleY(0);
    transform-origin: top;
  
    pointer-events: none; /* Allow clicks through the overlay */
  }
  
  .noise-overlay.opening {
    animation: openNoise 0.5s forwards;
  }
  
  .noise-overlay.closing {
    animation: closeNoise 0.5s forwards;
  }
  
  @keyframes openNoise {
    from {
      opacity: 0;
      transform: scaleY(0);
    }
    to {
      opacity: 0.95;
      transform: scaleY(1);
    }
  }
  
  @keyframes closeNoise {
    from {
      opacity: 0.95;
      transform: scaleY(1);
    }
    to {
      opacity: 0;
      transform: scaleY(0);
    }
  }
  
  /* White Label Styling */
  .movie-button-label {
    display: flex;
    flex-direction: column; /* Stack label lines vertically */
    align-items: center; /* Center align text */
  
    /* White text color */
    color: #FFFFFF;
  
    /* Responsive font sizing */
    font-size: 1.2rem; /* Adjust as needed */
    font-weight: bold; /* Optional: Make text bold */
  
    /* Text shadow for better visibility */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  
    /* Optional: Smooth transitions for future interactions */
    transition: opacity 0.3s ease, transform 0.3s ease;
  
    /* Initial state (optional) */
    opacity: 1;
  }
  
  .movie-button-label-line {
    /* Ensure each line takes full width and centers text */
    width: 100%;
    text-align: center;
  }
  
  /* Responsive Adjustments */
  
  /* Tablet devices */
  @media (max-width: 768px) {
    .movie-button-container {
      gap: 6px; /* Adjust spacing as needed */
    }
  
    .movie-button {
      width: 8vw; /* Adjust size as needed */
      height: 8vw; /* Maintain square aspect ratio */
    }
  
    .movie-button-label {
      font-size: 1rem; /* Adjust font size for tablets */
    }
  
    .noise-overlay {
      background-size: 80px 80px; /* Adjust based on noize2.gif size */
    }
  }
  
  /* Mobile devices */
  @media (max-width: 480px) {
    .movie-button-container {
      gap: 4px; /* Adjust spacing as needed */
    }
  
    .movie-button {
      width: 12vw; /* Slightly larger for better touch targets */
      height: 12vw; /* Maintain square aspect ratio */
      min-width: 40px;
      min-height: 40px;
      max-width: 60px;
      max-height: 60px;
    }
  
    .movie-button-label {
      font-size: 0.9rem; /* Adjust font size for mobile */
    }
  
    .noise-overlay {
      background-size: 60px 60px; /* Adjust based on noize2.gif size */
    }
  }
  
  /* Focus Styles for Accessibility */
  .movie-button:focus {
    outline: 2px solid #FF4500; /* Example focus outline */
    outline-offset: 4px;
  }
  
  /* -----------------------------------
   Global Noise Overlay Styling
----------------------------------- */
.global-noise-overlay {
  position: absolute; /* Absolute positioning within .bg-custom-background */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  background-image: url('../assets/noize2.gif'); /* Ensure the path is correct */
  background-repeat: repeat;
  background-size: 100px 100px; /* Adjust based on the size of noize2.gif */

  opacity: 0.15; /* Subtle opacity for global noise */
  pointer-events: none; /* Allow interactions to pass through */

  z-index: 15; /* Above the existing noise-overlay (z-10) but below interactive elements like the Movie Button (z-1000000) and toggle button (z-1001) */

  /* Prevent blurriness */
  image-rendering: pixelated;

  /* Optional: Add subtle animation for dynamic noise */
  animation: globalNoiseAnimation 2s steps(10) infinite;
}

@keyframes globalNoiseAnimation {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-50px, -50px);
  }
}
